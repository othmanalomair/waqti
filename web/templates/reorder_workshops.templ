package templates

import (
    "fmt"
    "waqti/internal/models"
)

templ ReorderWorkshopsPage(creator *models.Creator, workshops []models.Workshop, stats models.DashboardStats, lang string, isRTL bool) {
    <!DOCTYPE html>
    <html lang={ lang } dir={ getDirection(isRTL) }>
    <head>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <title>
            if lang == "ar" {
                إعادة ترتيب الورش - Waqti.me
            } else {
                Reorder Workshops - Waqti.me
            }
        </title>
        <script src="https://cdn.tailwindcss.com"></script>
        <script src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
        <script src="https://unpkg.com/htmx.org@1.9.10"></script>
        <link rel="preconnect" href="https://fonts.googleapis.com"/>
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Cairo:wght@400;500;600;700&display=swap"/>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"/>

        <script>
            tailwind.config = {
                theme: {
                    extend: {
                        colors: {
                            'gulf-teal': '#2DD4BF',
                            'ivory-sand': '#FEFCE8',
                            'slate-charcoal': '#1E293B'
                        },
                        fontFamily: {
                            'cairo': ['Cairo', 'sans-serif'],
                            'inter': ['Inter', 'sans-serif']
                        }
                    }
                }
            }
        </script>

        <style>
            .font-primary {
                font-family: { getFontFamily(isRTL) };
            }

            .gradient-bg {
                background: linear-gradient(135deg, #F0FDFA 0%, #FEFCE8 100%);
            }

            .card-shadow {
                box-shadow: 0 4px 20px rgba(45, 212, 191, 0.1);
            }

            .badge {
                background: linear-gradient(45deg, #2DD4BF, #06B6D4);
            }

            .workshop-row:hover {
                background-color: rgba(45, 212, 191, 0.05);
            }

            .reorder-btn:hover {
                background-color: rgba(45, 212, 191, 0.1);
            }
        </style>
    </head>
    <body class="gradient-bg min-h-screen font-primary">

        <!-- Header with Back Button -->
        <header class="bg-white/80 backdrop-blur-sm border-b border-gulf-teal/20 sticky top-0 z-50">
            <div class="max-w-md mx-auto px-4 py-4">
                <div class="flex items-center space-x-3">
                    <a href="/dashboard" class="p-2 hover:bg-gray-100 rounded-lg transition-colors">
                        <svg class="w-5 h-5 text-slate-charcoal" fill="currentColor" viewBox="0 0 24 24">
                            if isRTL {
                                <path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"/>
                            } else {
                                <path d="M15.41 16.34L10.83 11.75l4.58-4.59L14 5.75l-6 6 6 6z"/>
                            }
                        </svg>
                    </a>
                    <h1 class="text-lg font-bold text-slate-charcoal">
                        if lang == "ar" {
                            إعادة ترتيب الورش
                        } else {
                            Reorder Workshops
                        }
                    </h1>
                </div>
            </div>
        </header>

        <!-- Main Content -->
        <main class="max-w-md mx-auto px-4 py-6 space-y-6">

            <!-- Workshop Overview -->
            <div class="bg-white rounded-2xl p-6 card-shadow">
                <h2 class="text-lg font-bold text-slate-charcoal mb-4">
                    if lang == "ar" {
                        نظرة عامة على الورش
                    } else {
                        Workshop Overview
                    }
                </h2>

                <div class="grid grid-cols-3 gap-4">
                    <!-- Total Workshops -->
                    <div class="text-center">
                        <div class="text-2xl font-bold text-gulf-teal">{ fmt.Sprintf("%d", stats.TotalWorkshops) }</div>
                        <div class="text-xs text-gray-500">
                            if lang == "ar" {
                                إجمالي الورش
                            } else {
                                Total Workshops
                            }
                        </div>
                    </div>

                    <!-- Projected Sales -->
                    <div class="text-center">
                        <div class="text-2xl font-bold text-green-600">{ fmt.Sprintf("%.0f", stats.ProjectedSales) }</div>
                        <div class="text-xs text-gray-500">
                            if lang == "ar" {
                                المبيعات المتوقعة
                            } else {
                                Projected Sales
                            }
                        </div>
                    </div>

                    <!-- Remaining Seats -->
                    <div class="text-center">
                        <div class="text-2xl font-bold text-orange-600">{ fmt.Sprintf("%d", stats.RemainingSeats) }</div>
                        <div class="text-xs text-gray-500">
                            if lang == "ar" {
                                المقاعد المتبقية
                            } else {
                                Remaining Seats
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Add New Workshop Button - UPDATED WITH PROPER LINK -->
            <a href="/workshops/add" class="w-full bg-gulf-teal text-white py-3 rounded-xl font-medium hover:bg-teal-600 transition-colors flex items-center justify-center space-x-2 block">
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"/>
                </svg>
                <span>
                    if lang == "ar" {
                        إضافة ورشة جديدة
                    } else {
                        Add New Workshop
                    }
                </span>
            </a>

            <!-- Workshops List -->
            <div class="bg-white rounded-2xl card-shadow overflow-hidden">
                <div class="p-4 border-b border-gray-100">
                    <h3 class="font-semibold text-slate-charcoal">
                        if lang == "ar" {
                            ورشاتي
                        } else {
                            My Workshops
                        }
                    </h3>
                </div>

                <div id="workshops-list">
                    @WorkshopsList(workshops, lang, isRTL)
                </div>
            </div>

            <!-- Bottom Spacing -->
            <div class="h-6"></div>
        </main>
    </body>
    </html>
}

templ WorkshopsList(workshops []models.Workshop, lang string, isRTL bool) {
    for i, workshop := range workshops {
        <div class="workshop-row border-b border-gray-50 last:border-b-0">
            <div class="p-4 flex items-center justify-between">
                <!-- Workshop Info -->
                <div class="flex-1">
                    <div class="flex items-center space-x-2 mb-1">
                        <h4 class="font-medium text-slate-charcoal text-sm">
                            if lang == "ar" {
                                { workshop.TitleAr }
                            } else {
                                { workshop.Title }
                            }
                        </h4>
                        if !workshop.IsActive {
                            <span class="px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded">
                                if lang == "ar" {
                                    غير نشط
                                } else {
                                    Inactive
                                }
                            </span>
                        }
                    </div>
                    <div class="flex items-center space-x-4 text-xs text-gray-500">
                        <span>{ fmt.Sprintf("%.0f KD", workshop.Price) }</span>
                        <span>{ fmt.Sprintf("%d", workshop.MaxStudents) }
                            if lang == "ar" {
                                مقعد
                            } else {
                                seats
                            }
                        </span>
                    </div>
                </div>

                <!-- Actions -->
                <div class="flex items-center space-x-2">
                    <!-- Reorder Buttons -->
                    <div class="flex flex-col space-y-1">
                        if i > 0 {
                            <button
                                class="reorder-btn p-1 rounded hover:bg-gray-100 transition-colors"
                                hx-post="/workshops/reorder"
                                hx-values={ fmt.Sprintf(`{"workshop_id": "%s", "direction": "up"}`, workshop.ID.String()) }
                                hx-target="#workshops-list"
                                hx-swap="innerHTML"
                            >
                                <svg class="w-4 h-4 text-gray-600" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M7 14l5-5 5 5z"/>
                                </svg>
                            </button>
                        }
                        if i < len(workshops)-1 {
                            <button
                                class="reorder-btn p-1 rounded hover:bg-gray-100 transition-colors"
                                hx-post="/workshops/reorder"
                                hx-values={ fmt.Sprintf(`{"workshop_id": "%s", "direction": "down"}`, workshop.ID.String()) }
                                hx-target="#workshops-list"
                                hx-swap="innerHTML"
                            >
                                <svg class="w-4 h-4 text-gray-600" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M7 10l5 5 5-5z"/>
                                </svg>
                            </button>
                        }
                    </div>

                    <!-- Status Toggle -->
                    <button
                        class={ fmt.Sprintf("p-2 rounded-lg transition-colors %s", getStatusButtonClass(workshop.IsActive)) }
                        hx-post="/workshops/toggle-status"
                        hx-values={ fmt.Sprintf(`{"workshop_id": "%s"}`, workshop.ID.String()) }
                        hx-target="#workshops-list"
                        hx-swap="innerHTML"
                    >
                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                            if workshop.IsActive {
                                <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
                            } else {
                                <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>
                            }
                        </svg>
                    </button>

                    <!-- Edit Button -->
                    <button class="p-2 text-gulf-teal hover:bg-gulf-teal/10 rounded-lg transition-colors">
                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"/>
                        </svg>
                    </button>
                </div>
            </div>
        </div>
    }
}

// Helper function for status button styling
func getStatusButtonClass(isActive bool) string {
    if isActive {
        return "text-green-600 hover:bg-green-50"
    }
    return "text-gray-400 hover:bg-gray-50"
}
