package templates

import (
    "fmt"
    "time"
    "waqti/internal/models"
)

templ AnalyticsPage(creator *models.Creator, clicks []models.AnalyticsClick, stats models.AnalyticsStats, filter models.AnalyticsFilter, lang string, isRTL bool, scriptTag string) {
    <!DOCTYPE html>
    <html lang={ lang } dir={ getDirection(isRTL) }>
    <head>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <title>
            if lang == "ar" {
                التحليلات - Waqti.me
            } else {
                Analytics - Waqti.me
            }
        </title>
        <script src="https://cdn.tailwindcss.com"></script>
        <script src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
        <script src="https://unpkg.com/htmx.org@1.9.10"></script>
        <link rel="preconnect" href="https://fonts.googleapis.com"/>
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Cairo:wght@400;500;600;700&display=swap"/>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"/>

        <script>
            tailwind.config = {
                theme: {
                    extend: {
                        colors: {
                            'primary-blue': '#007AFF',
                            'secondary-blue': '#A0C4FF',
                            'charcoal': '#1C1C1E',
                            'light-gray': '#8A8A8E'
                        },
                        fontFamily: {
                            'cairo': ['Cairo', 'sans-serif'],
                            'inter': ['Inter', 'sans-serif']
                        }
                    }
                }
            }
        </script>

        <style>
            .font-primary {
                font-family: { getFontFamily(isRTL) };
            }

            .tab-active {
                background: #007AFF;
                color: white;
            }

            .tab-inactive {
                background: #F5F5F7;
                color: #1C1C1E;
            }

            .bar-chart {
                height: 200px;
                display: flex;
                align-items: end;
                gap: 8px;
                padding: 20px 0;
            }

            .chart-bar {
                background: #A0C4FF;
                border-radius: 4px 4px 0 0;
                min-height: 4px;
                cursor: pointer;
                transition: all 0.2s ease;
                position: relative;
            }

            .chart-bar:hover {
                background: #007AFF;
            }

            .chart-bar:hover::after {
                content: attr(data-value);
                position: absolute;
                bottom: 100%;
                left: 50%;
                transform: translateX(-50%);
                background: #1C1C1E;
                color: white;
                padding: 4px 8px;
                border-radius: 4px;
                font-size: 12px;
                white-space: nowrap;
                margin-bottom: 4px;
            }

            .referrer-bar {
                height: 8px;
                background: #F5F5F7;
                border-radius: 4px;
                overflow: hidden;
            }

            .referrer-progress {
                height: 100%;
                background: #A0C4FF;
                border-radius: 4px;
                transition: width 0.3s ease;
            }
        </style>
    </head>
    <body class="bg-white min-h-screen font-primary">

        <!-- Header with Back Button -->
        <header class="bg-white border-b border-gray-100 sticky top-0 z-50">
            <div class="max-w-md mx-auto px-4 py-4">
                <div class="flex items-center space-x-3">
                    <a href="/dashboard" class="p-2 hover:bg-gray-100 rounded-lg transition-colors">
                        <svg class="w-5 h-5 text-charcoal" fill="currentColor" viewBox="0 0 24 24">
                            if isRTL {
                                <path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"/>
                            } else {
                                <path d="M15.41 16.34L10.83 11.75l4.58-4.59L14 5.75l-6 6 6 6z"/>
                            }
                        </svg>
                    </a>
                    <h1 class="text-lg font-bold text-charcoal">
                        if lang == "ar" {
                            التحليلات
                        } else {
                            Analytics
                        }
                    </h1>
                </div>
            </div>
        </header>

        <!-- Main Content -->
        <main class="max-w-md mx-auto px-4 py-6 space-y-6">
            <div id="analytics-content">
                @AnalyticsContent(creator, clicks, stats, filter, lang, isRTL, scriptTag)
            </div>
        </main>
    </body>
    </html>
}

templ AnalyticsContent(creator *models.Creator, clicks []models.AnalyticsClick, stats models.AnalyticsStats, filter models.AnalyticsFilter, lang string, isRTL bool, scriptTag string) {
    <!-- KPI Header Section -->
    <div class="mb-6">
        <div class="grid grid-cols-2 gap-4">
            <!-- Total Clicks -->
            <div class="text-center">
                <div class="text-sm text-light-gray mb-1">
                    if lang == "ar" {
                        إجمالي النقرات
                    } else {
                        TOTAL CLICKS
                    }
                </div>
                <div class="text-4xl font-bold text-primary-blue">
                    { fmt.Sprintf("%d", stats.TotalClicks) }
                </div>
            </div>
            
            <!-- Last Click -->
            <div class="text-center">
                <div class="text-sm text-light-gray mb-1">
                    if lang == "ar" {
                        آخر نقرة
                    } else {
                        LAST CLICK
                    }
                </div>
                <div class="text-xl font-semibold text-secondary-blue">
                    if len(clicks) > 0 {
                        { getTimeAgo(clicks[0].ClickedAt, lang) }
                    } else {
                        if lang == "ar" {
                            لا توجد نقرات
                        } else {
                            No clicks yet
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Time Filter Tabs -->
    <div class="mb-6">
        <div class="flex bg-gray-100 rounded-full p-1">
            <button onclick="switchTimeFilter('hours')" id="tab-hours" class="flex-1 py-3 px-6 rounded-full font-semibold text-sm transition-all tab-active">
                if lang == "ar" {
                    الساعات
                } else {
                    Hours
                }
            </button>
            <button onclick="switchTimeFilter('days')" id="tab-days" class="flex-1 py-3 px-6 rounded-full font-semibold text-sm transition-all tab-inactive">
                if lang == "ar" {
                    الأيام
                } else {
                    Days
                }
            </button>
            <button onclick="switchTimeFilter('months')" id="tab-months" class="flex-1 py-3 px-6 rounded-full font-semibold text-sm transition-all tab-inactive">
                if lang == "ar" {
                    الشهور
                } else {
                    Months
                }
            </button>
        </div>
    </div>

    <!-- Traffic Graph -->
    <div class="bg-white rounded-2xl p-6 mb-6 shadow-sm">
        <div class="bar-chart" id="traffic-chart">
            <!-- Chart bars will be generated by JavaScript -->
        </div>
        <div class="flex justify-between text-xs text-light-gray mt-2" id="chart-labels">
            <!-- Labels will be generated by JavaScript -->
        </div>
    </div>

    <!-- Top Referrers Section -->
    <div class="bg-white rounded-2xl p-6 shadow-sm">
        <h3 class="text-lg font-bold text-charcoal mb-4">
            if lang == "ar" {
                أهم المصادر
            } else {
                Top Referrers
            }
        </h3>
        
        <div class="space-y-4" id="referrers-list">
            if stats.TotalClicks > 0 {
                for platform, count := range stats.PlatformBreakdown {
                    @PlatformReferrerRow(platform, count, stats.TotalClicks, lang)
                }
            } else {
                <div class="text-center py-8 text-gray-500">
                    if lang == "ar" {
                        لا توجد بيانات المصادر حتى الآن
                    } else {
                        No referrer data yet
                    }
                </div>
            }
        </div>
    </div>

    <!-- Top Devices Section -->
    <div class="bg-white rounded-2xl p-6 shadow-sm">
        <h3 class="text-lg font-bold text-charcoal mb-4">
            if lang == "ar" {
                أهم الأجهزة
            } else {
                Top Devices
            }
        </h3>
        
        <div class="space-y-4" id="devices-list">
            if stats.TotalClicks > 0 {
                for device, count := range stats.DeviceBreakdown {
                    @DeviceReferrerRow(device, count, stats.TotalClicks, lang)
                }
            } else {
                <div class="text-center py-8 text-gray-500">
                    if lang == "ar" {
                        لا توجد بيانات الأجهزة حتى الآن
                    } else {
                        No device data yet
                    }
                </div>
            }
        </div>
    </div>

    @templ.Raw(scriptTag)
}

templ PlatformReferrerRow(platform string, count int, totalClicks int, lang string) {
    <div class="flex items-center justify-between">
        <div class="flex items-center space-x-3">
            @PlatformIcon(platform)
            <span class="font-medium text-charcoal">
                if lang == "ar" {
                    { getPlatformNameAr(platform) }
                } else {
                    { platform }
                }
            </span>
        </div>
        <div class="flex items-center space-x-3">
            <div class="referrer-bar w-24">
                <div class="referrer-progress" style={ fmt.Sprintf("width: %d%%", getPercentage(count, totalClicks)) }></div>
            </div>
            <span class="font-bold text-charcoal w-16 text-right">{ fmt.Sprintf("%d", count) }</span>
        </div>
    </div>
}

templ PlatformIcon(platform string) {
    if platform == "Instagram" {
        <div class="w-8 h-8 bg-gradient-to-r from-purple-500 to-pink-500 rounded-lg flex items-center justify-center">
            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"/>
            </svg>
        </div>
    } else if platform == "Snapchat" {
        <div class="w-8 h-8 bg-yellow-400 rounded-lg flex items-center justify-center">
            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.174-.105-.949-.199-2.403.041-3.439.219-.937 1.404-5.958 1.404-5.958s-.358-.72-.358-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.099.12.112.225.085.345-.09.375-.293 1.199-.334 1.363-.053.225-.172.271-.402.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.357-.629-2.750-1.378l-.748 2.853c-.271 1.043-1.002 2.35-1.492 3.146C9.57 23.812 10.763 24.009 12.017 24c6.624 0 11.99-5.367 11.99-12C24.007 5.367 18.641.001.012.001z"/>
            </svg>
        </div>
    } else if platform == "WhatsApp" {
        <div class="w-8 h-8 bg-green-500 rounded-lg flex items-center justify-center">
            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.465 3.488"/>
            </svg>
        </div>
    } else if platform == "TikTok" {
        <div class="w-8 h-8 bg-black rounded-lg flex items-center justify-center">
            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                <path d="M19.59 6.69a4.83 4.83 0 01-3.77-4.25V2h-3.45v13.67a2.89 2.89 0 01-5.2 1.74 2.89 2.89 0 012.31-4.64 2.93 2.93 0 01.88.13V9.4a6.84 6.84 0 00-.88-.05A6.33 6.33 0 005 20.1a6.34 6.34 0 0010.86-4.43v-7a8.16 8.16 0 004.77 1.52v-3.4a4.85 4.85 0 01-1-.1z"/>
            </svg>
        </div>
    } else if platform == "Twitter" {
        <div class="w-8 h-8 bg-blue-400 rounded-lg flex items-center justify-center">
            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
            </svg>
        </div>
    } else {
        <div class="w-8 h-8 bg-gray-400 rounded-lg flex items-center justify-center">
            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                <path d="M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H6.9C3.58 7 .9 9.68.9 13s2.68 6 6 6H11v-1.9H6.9c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9.1-6H13v1.9h4.1c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1H13V17h4.1c3.32 0 6-2.68 6-6s-2.68-6-6-6z"/>
            </svg>
        </div>
    }
}

templ DeviceReferrerRow(device string, count int, totalClicks int, lang string) {
    <div class="flex items-center justify-between">
        <div class="flex items-center space-x-3">
            @DeviceIcon(device)
            <span class="font-medium text-charcoal">
                if lang == "ar" {
                    { getDeviceNameAr(device) }
                } else {
                    { device }
                }
            </span>
        </div>
        <div class="flex items-center space-x-3">
            <div class="referrer-bar w-24">
                <div class="referrer-progress" style={ fmt.Sprintf("width: %d%%", getPercentage(count, totalClicks)) }></div>
            </div>
            <span class="font-bold text-charcoal w-16 text-right">{ fmt.Sprintf("%d", count) }</span>
        </div>
    </div>
}

templ DeviceIcon(device string) {
    if device == "iPhone" {
        <div class="w-8 h-8 bg-gradient-to-r from-gray-800 to-gray-600 rounded-lg flex items-center justify-center">
            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                <path d="M17.05 20.28c-.98.95-2.05 .8-3.08.35-1.09-.46-2.09-.48-3.24 0-1.44.62-2.2.44-3.06-.35C2.79 15.25 3.51 7.59 9.05 7.31c1.35.07 2.29.74 3.08.8 1.18-.24 2.31-.93 3.57-.84 1.51.12 2.65.72 3.4 1.8-3.12 1.87-2.38 5.98.48 7.13-.57 1.5-1.31 2.99-2.54 4.09l.01-.01zM12.03 7.25c-.15-2.23 1.66-4.07 3.74-4.25.29 2.58-2.34 4.5-3.74 4.25z"/>
            </svg>
        </div>
    } else if device == "Android" {
        <div class="w-8 h-8 bg-green-500 rounded-lg flex items-center justify-center">
            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                <path d="M17.523 15.3414c-.5511 0-.9993-.4486-.9993-.9997s.4482-.9993.9993-.9993c.5511 0 .9993.4486.9993.9997s-.4482.9997-.9993.9997m-11.046 0c-.5511 0-.9993-.4486-.9993-.9997s.4482-.9993.9993-.9993c.5511 0 .9993.4486.9993.9997s-.4482.9997-.9993.9997m11.4045-6.02l1.9973-3.4592a.416.416 0 00-.1521-.5676.416.416 0 00-.5676.1521l-2.0223 3.503C15.5902 8.2439 13.8533 7.8508 12 7.8508s-3.5902.3931-5.1367 1.0989L4.841 5.4467a.4161.4161 0 00-.5677-.1521.4157.4157 0 00-.1521.5676l1.9973 3.4592C2.6889 11.1867.3432 14.6589 0 18.761h24c-.3435-4.1021-2.6892-7.5743-6.1185-9.4396"/>
            </svg>
        </div>
    } else if device == "Desktop" || device == "PC (Windows)" {
        <div class="w-8 h-8 bg-blue-500 rounded-lg flex items-center justify-center">
            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                <path d="M21,16H3V4H21M21,2H3C1.89,2 1,2.89 1,4V16A2,2 0 0,0 3,18H10V20H8V22H16V20H14V18H21A2,2 0 0,0 23,16V4C23,2.89 22.1,2 21,2Z"/>
            </svg>
        </div>
    } else if device == "Mac" || device == "PC (Mac)" {
        <div class="w-8 h-8 bg-gray-800 rounded-lg flex items-center justify-center">
            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                <path d="M18.71 19.5c-.83 1.24-1.71 2.45-3.05 2.47-1.34.03-1.77-.79-3.29-.79-1.53 0-2 .77-3.27.82-1.31.05-2.3-1.32-3.14-2.53C4.25 17 2.94 12.45 4.7 9.39c.87-1.52 2.43-2.48 4.12-2.51 1.28-.02 2.5.87 3.29.87.78 0 2.26-1.07 3.81-.91.65.03 2.47.26 3.64 1.98-.09.06-2.17 1.28-2.15 3.81.03 3.02 2.65 4.03 2.68 4.04-.03.07-.42 1.44-1.38 2.83M13 3.5c.73-.83 1.94-1.46 2.94-1.5.13 1.17-.34 2.35-1.04 3.19-.69.85-1.83 1.51-2.95 1.42-.15-1.15.41-2.35 1.05-3.11z"/>
            </svg>
        </div>
    } else if device == "PC (Linux)" {
        <div class="w-8 h-8 bg-orange-500 rounded-lg flex items-center justify-center">
            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12.504 0c-.155 0-.315.008-.480.021-4.226.333-3.105 4.807-3.17 6.298-.076 1.092-.3 1.953-1.05 3.02-.885 1.051-2.127 2.75-2.716 4.521-.278.832-.41 1.684-.287 2.489a.424.424 0 00-.11.135c-.26.268-.45.6-.663.839-.199.199-.485.267-.797.4-.313.136-.658.269-.864.68-.09.189-.136.394-.132.602 0 .199.027.4.055.536.058.399.116.728.04.97-.249.68-.28 1.145-.106 1.484.174.334.535.47.94.601.81.2 1.91.135 2.774.6.926.466 1.866.67 2.616.47.526-.116.97-.464 1.208-.946.587-.003 1.23-.269 2.26-.334.699-.058 1.574.267 2.577.2.025.134.063.198.114.333l.003.003c.391.778 1.113 1.132 1.884 1.071.771-.06 1.592-.536 2.257-1.306.631-.765 1.683-1.084 2.378-1.503.348-.199.629-.469.649-.853.023-.4-.2-.811-.714-1.376v-.097l-.003-.003c-.17-.2-.25-.535-.338-.926-.085-.401-.182-.786-.492-1.046h-.003c-.059-.054-.123-.067-.188-.135a.357.357 0 00-.19-.064c.431-1.278.264-2.55-.173-3.694-.533-1.41-1.465-2.638-2.175-3.483-.796-1.005-1.576-1.957-1.56-3.368.026-2.152.236-6.133-3.544-6.139zm.529 3.405h.013c.213 0 .396.062.584.198.19.135.33.332.438.533.105.259.158.459.166.724 0-.02.006-.04.006-.06v.105a.086.086 0 01-.004-.021l-.004-.024a1.807 1.807 0 01-.15.706.953.953 0 01-.213.335.71.71 0 00-.088-.042c-.104-.045-.198-.064-.284-.133a1.312 1.312 0 00-.22-.066c-.05-.006-.098-.015-.135-.02-.039-.008-.079-.021-.079-.021a2.019 2.019 0 01-.9-.540 1.286 1.286 0 01-.368-.596c-.123-.466-.182-.735-.182-1.015 0-.4.068-.73.229-1.026.085-.16.186-.317.358-.374.069-.016.135-.022.214-.02z"/>
            </svg>
        </div>
    } else if device == "iPad" || device == "Tablet" {
        <div class="w-8 h-8 bg-gray-600 rounded-lg flex items-center justify-center">
            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                <path d="M19,18H5V6H19M21,4H3C1.89,4 1,4.89 1,6V18A2,2 0 0,0 3,20H21A2,2 0 0,0 23,18V6C23,4.89 22.1,4 21,4Z"/>
            </svg>
        </div>
    } else {
        <div class="w-8 h-8 bg-gray-400 rounded-lg flex items-center justify-center">
            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                <path d="M17,17H7V7H17M21,3H3A2,2 0 0,0 1,5V19A2,2 0 0,0 3,21H21A2,2 0 0,0 23,19V5A2,2 0 0,0 21,3Z"/>
            </svg>
        </div>
    }
}

// Helper functions
func getTimeAgo(clickTime time.Time, lang string) string {
    now := time.Now()
    diff := now.Sub(clickTime)
    
    if diff < time.Minute {
        if lang == "ar" {
            return "الآن"
        }
        return "Now"
    } else if diff < time.Hour {
        minutes := int(diff.Minutes())
        if lang == "ar" {
            return fmt.Sprintf("%d دقيقة", minutes)
        }
        return fmt.Sprintf("%d min ago", minutes)
    } else if diff < 24*time.Hour {
        hours := int(diff.Hours())
        if lang == "ar" {
            return fmt.Sprintf("%d ساعة", hours)
        }
        return fmt.Sprintf("%d hours ago", hours)
    } else {
        days := int(diff.Hours() / 24)
        if lang == "ar" {
            return fmt.Sprintf("%d يوم", days)
        }
        return fmt.Sprintf("%d days ago", days)
    }
}

func getPlatformNameAr(platform string) string {
    platformNames := map[string]string{
        "Instagram": "إنستغرام",
        "Snapchat":  "سناب شات",
        "WhatsApp":  "واتساب",
        "TikTok":    "تيك توك",
        "Twitter":   "تويتر",
        "Facebook":  "فيسبوك",
        "Direct":    "مباشر",
        "Other":     "أخرى",
    }
    
    if name, exists := platformNames[platform]; exists {
        return name
    }
    return platform
}

func getDeviceNameAr(device string) string {
    deviceNames := map[string]string{
        "iPhone":       "آيفون",
        "Android":      "أندرويد",
        "Desktop":      "كمبيوتر مكتبي",
        "PC (Windows)": "كمبيوتر (ويندوز)",
        "PC (Mac)":     "كمبيوتر (ماك)",
        "Mac":          "ماك",
        "PC (Linux)":   "كمبيوتر (لينكس)",
        "iPad":         "آيباد",
        "Tablet":       "جهاز لوحي",
        "Mobile":       "جهاز محمول",
        "Other":        "أخرى",
    }
    
    if name, exists := deviceNames[device]; exists {
        return name
    }
    return device
}

func getPercentage(count, total int) int {
    if total == 0 {
        return 0
    }
    return (count * 100) / total
}
