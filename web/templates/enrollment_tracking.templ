package templates

import (
    "fmt"
    "waqti/internal/models"
)

templ EnrollmentTrackingPage(enrollments []models.Enrollment, stats models.EnrollmentStats, filter models.EnrollmentFilter, lang string, isRTL bool) {
    <!DOCTYPE html>
    <html lang={ lang } dir={ getDirection(isRTL) }>
    <head>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <title>
            if lang == "ar" {
                تتبع التسجيلات - Waqti.me
            } else {
                Enrollment Tracking - Waqti.me
            }
        </title>
        <script src="https://cdn.tailwindcss.com"></script>
        <script src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
        <script src="https://unpkg.com/htmx.org@1.9.10"></script>
        <link rel="preconnect" href="https://fonts.googleapis.com"/>
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Cairo:wght@400;500;600;700&display=swap"/>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"/>

        <script>
            tailwind.config = {
                theme: {
                    extend: {
                        colors: {
                            'gulf-teal': '#2DD4BF',
                            'ivory-sand': '#FEFCE8',
                            'slate-charcoal': '#1E293B'
                        },
                        fontFamily: {
                            'cairo': ['Cairo', 'sans-serif'],
                            'inter': ['Inter', 'sans-serif']
                        }
                    }
                }
            }
        </script>

        <style>
            .font-primary {
                font-family: { getFontFamily(isRTL) };
            }

            .gradient-bg {
                background: linear-gradient(135deg, #F0FDFA 0%, #FEFCE8 100%);
            }

            .card-shadow {
                box-shadow: 0 4px 20px rgba(45, 212, 191, 0.1);
            }

            .enrollment-row:hover {
                background-color: rgba(45, 212, 191, 0.05);
            }

            .filter-select {
                background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
                background-position: right 0.5rem center;
                background-repeat: no-repeat;
                background-size: 1.5em 1.5em;
                padding-right: 2.5rem;
            }
        </style>
    </head>
    <body class="gradient-bg min-h-screen font-primary">

        <!-- Header with Back Button -->
        <header class="bg-white/80 backdrop-blur-sm border-b border-gulf-teal/20 sticky top-0 z-50">
            <div class="max-w-md mx-auto px-4 py-4">
                <div class="flex items-center space-x-3">
                    <a href="/dashboard" class="p-2 hover:bg-gray-100 rounded-lg transition-colors">
                        <svg class="w-5 h-5 text-slate-charcoal" fill="currentColor" viewBox="0 0 24 24">
                            if isRTL {
                                <path d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"/>
                            } else {
                                <path d="M15.41 16.34L10.83 11.75l4.58-4.59L14 5.75l-6 6 6 6z"/>
                            }
                        </svg>
                    </a>
                    <h1 class="text-lg font-bold text-slate-charcoal">
                        if lang == "ar" {
                            تتبع التسجيلات
                        } else {
                            Enrollment Tracking
                        }
                    </h1>
                </div>
            </div>
        </header>

        <!-- Main Content -->
        <main class="max-w-md mx-auto px-4 py-6 space-y-6">
            <div id="enrollment-content">
                @EnrollmentContent(enrollments, stats, filter, lang, isRTL)
            </div>
        </main>
    </body>
    </html>
}

templ EnrollmentContent(enrollments []models.Enrollment, stats models.EnrollmentStats, filter models.EnrollmentFilter, lang string, isRTL bool) {
    <!-- Stats Overview -->
    <div class="bg-white rounded-2xl p-6 card-shadow">
        <h2 class="text-lg font-bold text-slate-charcoal mb-4">
            if lang == "ar" {
                إحصائيات التسجيلات
            } else {
                Enrollment Statistics
            }
        </h2>

        <div class="grid grid-cols-3 gap-4">
            <!-- Successful Sales -->
            <div class="text-center">
                <div class="text-2xl font-bold text-green-600">{ fmt.Sprintf("%d", stats.SuccessfulSales) }</div>
                <div class="text-xs text-gray-500">
                    if lang == "ar" {
                        مبيعات ناجحة
                    } else {
                        Successful Sales
                    }
                </div>
            </div>

            <!-- Total Sales -->
            <div class="text-center">
                <div class="text-2xl font-bold text-gulf-teal">{ fmt.Sprintf("%.0f", stats.TotalSales) }</div>
                <div class="text-xs text-gray-500">
                    if lang == "ar" {
                        إجمالي المبيعات
                    } else {
                        Total Sales
                    }
                </div>
            </div>

            <!-- Rejected Sales -->
            <div class="text-center">
                <div class="text-2xl font-bold text-red-600">{ fmt.Sprintf("%d", stats.RejectedSales) }</div>
                <div class="text-xs text-gray-500">
                    if lang == "ar" {
                        مبيعات مرفوضة
                    } else {
                        Rejected Sales
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Filters -->
    <div class="bg-white rounded-2xl p-4 card-shadow">
        <form
            hx-post="/enrollments/filter"
            hx-target="#enrollment-content"
            hx-swap="innerHTML"
            hx-trigger="change"
            class="space-y-4"
        >
            <!-- Time Range Filter -->
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                    if lang == "ar" {
                        الفترة الزمنية
                    } else {
                        Time Range
                    }
                </label>
                <select name="time_range" class="w-full p-2 border border-gray-300 rounded-lg filter-select appearance-none bg-white">
                    <option value="days" selected?={ filter.TimeRange == "days" }>
                        if lang == "ar" {
                            آخر 30 يوم
                        } else {
                            Last 30 Days
                        }
                    </option>
                    <option value="months" selected?={ filter.TimeRange == "months" }>
                        if lang == "ar" {
                            آخر 12 شهر
                        } else {
                            Last 12 Months
                        }
                    </option>
                    <option value="year" selected?={ filter.TimeRange == "year" }>
                        if lang == "ar" {
                            آخر 5 سنوات
                        } else {
                            Last 5 Years
                        }
                    </option>
                </select>
            </div>

            <!-- Sort Options -->
            <div class="flex space-x-4">
                <div class="flex-1">
                    <label class="block text-sm font-medium text-gray-700 mb-2">
                        if lang == "ar" {
                            ترتيب حسب
                        } else {
                            Sort By
                        }
                    </label>
                    <select name="order_by" class="w-full p-2 border border-gray-300 rounded-lg filter-select appearance-none bg-white">
                        <option value="date" selected?={ filter.OrderBy == "date" }>
                            if lang == "ar" {
                                التاريخ
                            } else {
                                Date
                            }
                        </option>
                        <option value="price" selected?={ filter.OrderBy == "price" }>
                            if lang == "ar" {
                                السعر
                            } else {
                                Price
                            }
                        </option>
                        <option value="name" selected?={ filter.OrderBy == "name" }>
                            if lang == "ar" {
                                الاسم
                            } else {
                                Name
                            }
                        </option>
                    </select>
                </div>

                <div class="flex-1">
                    <label class="block text-sm font-medium text-gray-700 mb-2">
                        if lang == "ar" {
                            الاتجاه
                        } else {
                            Direction
                        }
                    </label>
                    <select name="order_dir" class="w-full p-2 border border-gray-300 rounded-lg filter-select appearance-none bg-white">
                        <option value="asc" selected?={ filter.OrderDir == "asc" }>
                            if lang == "ar" {
                                تصاعدي
                            } else {
                                Ascending
                            }
                        </option>
                        <option value="desc" selected?={ filter.OrderDir == "desc" }>
                            if lang == "ar" {
                                تنازلي
                            } else {
                                Descending
                            }
                        </option>
                    </select>
                </div>
            </div>
        </form>
    </div>

    <!-- Enrollments Table -->
    <div class="bg-white rounded-2xl card-shadow overflow-hidden">
        <div class="p-4 border-b border-gray-100">
            <h3 class="font-semibold text-slate-charcoal">
                if lang == "ar" {
                    التسجيلات
                } else {
                    Enrollments
                }
            </h3>
        </div>

        <div class="divide-y divide-gray-50">
            if len(enrollments) == 0 {
                <div class="p-8 text-center text-gray-500">
                    if lang == "ar" {
                        لا توجد تسجيلات
                    } else {
                        No enrollments found
                    }
                </div>
            } else {
                for _, enrollment := range enrollments {
                    @EnrollmentRow(enrollment, filter, lang, isRTL)
                }
            }
        </div>
    </div>
}

templ EnrollmentRow(enrollment models.Enrollment, filter models.EnrollmentFilter, lang string, isRTL bool) {
    <div class="enrollment-row p-4">
        <div class="flex items-center justify-between">
            <!-- Enrollment Info -->
            <div class="flex-1">
                <div class="flex items-center space-x-2 mb-1">
                    <h4 class="font-medium text-slate-charcoal text-sm">
                        if lang == "ar" {
                            { enrollment.WorkshopNameAr }
                        } else {
                            { enrollment.WorkshopName }
                        }
                    </h4>
                    <span class={ fmt.Sprintf("px-2 py-1 text-xs rounded %s", getStatusBadgeClass(enrollment.Status)) }>
                        if lang == "ar" {
                            { enrollment.StatusAr }
                        } else {
                            { enrollment.Status }
                        }
                    </span>
                </div>
                <div class="flex items-center space-x-4 text-xs text-gray-500 mb-1">
                    <span>{ enrollment.StudentName }</span>
                    <span>{ enrollment.EnrollmentDate.Format("2006/01/02") }</span>
                </div>
                <div class="text-sm font-semibold text-gulf-teal">
                    { fmt.Sprintf("%.2f KD", enrollment.TotalPrice) }
                </div>
            </div>

            <!-- Actions -->
            <div class="flex items-center space-x-2">
                <!-- Edit Button -->
                <button class="p-2 text-gulf-teal hover:bg-gulf-teal/10 rounded-lg transition-colors">
                    <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"/>
                    </svg>
                </button>

                <!-- Delete Button -->
                <button
                    class="p-2 text-red-600 hover:bg-red-50 rounded-lg transition-colors"
                    hx-post="/enrollments/delete"
                    hx-values={ fmt.Sprintf(`{"enrollment_id": "%s", "current_time_range": "%s", "current_order_by": "%s", "current_order_dir": "%s"}`, enrollment.ID.String(), filter.TimeRange, filter.OrderBy, filter.OrderDir) }
                    hx-target="#enrollment-content"
                    hx-swap="innerHTML"
                    hx-confirm={ getDeleteConfirmText(lang) }
                >
                    <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"/>
                    </svg>
                </button>
            </div>
        </div>
    </div>
}

// Helper functions
func getStatusBadgeClass(status string) string {
    switch status {
    case "successful":
        return "bg-green-100 text-green-800"
    case "rejected":
        return "bg-red-100 text-red-800"
    case "pending":
        return "bg-yellow-100 text-yellow-800"
    default:
        return "bg-gray-100 text-gray-800"
    }
}

func getDeleteConfirmText(lang string) string {
    if lang == "ar" {
        return "هل أنت متأكد من حذف هذا التسجيل؟"
    }
    return "Are you sure you want to delete this enrollment?"
}
